<?xml version="1.0" encoding="utf-8"?>

<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->

<configuration status="INFO" monitorInterval="30">
	<properties>
		<property name="appname">junx-ep-seed</property>
		<!-- 文件输出格式 -->
		<property name="pattern">%d{yyyy-MM-dd HH:mm:ss.SSS} | %-5level [%thread] %c [%L] | %msg%n</property>
	</properties>

	<!--定义所有的appender -->
	<appenders>

		<!--输出控制台 -->
		<console name="console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="${pattern}" />
		</console>

		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<!-- <File name="log" fileName="log/test.log" append="false">
			<PatternLayout pattern="${pattern}" />
		</File> -->


		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="baseInfo" fileName="./logs/${appname}.log" filePattern="./logs/$${date:yyyy-MM}/${appname}-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="${pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy modulate="true" interval="1" />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件 -->
			<DefaultRolloverStrategy max="30" />
		</RollingFile>
		<RollingFile name="accessInfo" fileName="./logs/${appname}-access.log" filePattern="./logs/$${date:yyyy-MM}/${appname}-access-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout>
		        <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %msg%n</Pattern>
		    </PatternLayout>
			<PatternLayout pattern="${pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy modulate="true" interval="1" />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件 -->
			<DefaultRolloverStrategy max="30" />
		</RollingFile>
		<!-- <RollingFile name="RollingFileError" fileName="./logs/error.log" filePattern="./logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="${pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="0.1 MB" />
			</Policies>
			<DefaultRolloverStrategy max="7" />
		</RollingFile>
		-->
	</appenders>

	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
        <AsyncLogger name="io.github.junxworks.ep.core.security.access.AccessFilter" level="INFO" additivity="true">
        	<appender-ref ref="accessInfo" />
        </AsyncLogger>
		<AsyncRoot level="info" includeLocation="true">
 			<appender-ref ref="console" />
			<appender-ref ref="baseInfo" />
		</AsyncRoot>
	</loggers>
</configuration>  